-- Таблица Rating
CREATE TABLE IF NOT EXISTS rating (
    rating_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa_rating VARCHAR(10)
);

-- Таблица Genre
CREATE TABLE IF NOT EXISTS genre (
    genre_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name VARCHAR(50)
);

-- Таблица Films
CREATE TABLE IF NOT EXISTS films (
    film_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(200) NOT NULL,
    description VARCHAR(200),
    release_date DATE,
    duration_min INT,
    rating_id INT,
    FOREIGN KEY (rating_id) REFERENCES rating(rating_id)
);

-- Таблица Users
CREATE TABLE IF NOT EXISTS users (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login VARCHAR(30) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    name VARCHAR(30) NOT NULL,
    birthday DATE NOT NULL
);

-- Таблица Likes
CREATE TABLE IF NOT EXISTS likes (
    like_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id BIGINT,
    user_id BIGINT,
    FOREIGN KEY (film_id) REFERENCES films(film_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    UNIQUE (film_id, user_id)
);

-- Таблица Friendship
CREATE TABLE IF NOT EXISTS friendship (
    friendship_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    initiator_user_id BIGINT NOT NULL,
    friend_user_id BIGINT NOT NULL,
    confirmed BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (initiator_user_id) REFERENCES users(user_id),
    FOREIGN KEY (friend_user_id) REFERENCES users(user_id),
    UNIQUE (initiator_user_id, friend_user_id)
);

-- Таблица Film_Genre
CREATE TABLE IF NOT EXISTS film_genre (
    film_genre_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id BIGINT,
    genre_id INT,
    FOREIGN KEY (film_id) REFERENCES films(film_id) ON DELETE CASCADE,
    FOREIGN KEY (genre_id) REFERENCES genre(genre_id),
    UNIQUE (film_id, genre_id)
);